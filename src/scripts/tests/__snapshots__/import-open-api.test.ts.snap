// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`scripts/import-open-api should parse correctly petstore-expanded.yaml 1`] = `
"/* Generated by restful-react */

import React from \\"react\\";
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from \\"restful-react\\";

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export type Pet = NewPet & {id: number};

export interface NewPet {name: string; tag?: string}

export type CatOrDog = Cat | Dog;

export interface Cat {type: \\"cat\\"; breed: \\"labrador\\" | \\"carlin\\" | \\"beagle\\"}

export interface Dog {type: \\"dog\\"; breed: \\"saimois\\" | \\"bengal\\" | \\"british shorthair\\"}

export interface Error {code: number; message: string}

export interface FindPetsQueryParams {tags?: string[]; limit?: number}

export type FindPetsProps = Omit<GetProps<Pet[], Error, FindPetsQueryParams>, \\"path\\">;


export const FindPets = (props: FindPetsProps) => (
  <Get<Pet[], Error, FindPetsQueryParams>
    path={\`/pets\`}
    {...props}
  />
);

export type UseFindPetsProps = Omit<UseGetProps<Pet[], FindPetsQueryParams>, \\"path\\">;


export const useFindPets = (props: UseFindPetsProps) => useGet<Pet[], Error, FindPetsQueryParams>(\`/pets\`, props);


export type AddPetProps = Omit<MutateProps<Pet, Error, void, NewPet>, \\"path\\" | \\"verb\\">;


export const AddPet = (props: AddPetProps) => (
  <Mutate<Pet, Error, void, NewPet>
    verb=\\"POST\\"
    path={\`/pets\`}
    {...props}
  />
);

export type UseAddPetProps = Omit<UseMutateProps<Pet, void, NewPet>, \\"path\\" | \\"verb\\">;


export const useAddPet = (props: UseAddPetProps) => useMutate<Pet, Error, void, NewPet>(\\"POST\\", \`/pets\`, props);


export type FindPetByIdProps = Omit<GetProps<Pet, Error, void>, \\"path\\"> & {id: number};


export const FindPetById = ({id, ...props}: FindPetByIdProps) => (
  <Get<Pet, Error, void>
    path={\`/pets/\${id}\`}
    {...props}
  />
);

export type UseFindPetByIdProps = Omit<UseGetProps<Pet, void>, \\"path\\"> & {id: number};


export const useFindPetById = ({id, ...props}: UseFindPetByIdProps) => useGet<Pet, Error, void>(\`/pets/\${id}\`, props);


export type DeletePetProps = Omit<MutateProps<void, Error, void, string>, \\"path\\" | \\"verb\\">;


export const DeletePet = (props: DeletePetProps) => (
  <Mutate<void, Error, void, string>
    verb=\\"DELETE\\"
    path={\`/pets\`}
    {...props}
  />
);

export type UseDeletePetProps = Omit<UseMutateProps<void, void, string>, \\"path\\" | \\"verb\\">;


export const useDeletePet = (props: UseDeletePetProps) => useMutate<void, Error, void, string>(\\"DELETE\\", \`/pets\`, props);

"
`;
